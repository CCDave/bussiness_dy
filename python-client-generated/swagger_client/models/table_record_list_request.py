# coding: utf-8

"""
    织信开放API接口

    织信开放API接口  # noqa: E501

    OpenAPI spec version: v2
    Contact: sales@conrerstone365.cn
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class TableRecordListRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'order_by_list': 'list[OrderBy]',
        'page_size': 'int',
        'page_index': 'int',
        'table_id': 'str',
        'condition_list': 'list[Condition]',
        'id': 'str',
        'group_by_field_list': 'list[object]',
        'aggregation_query_list': 'list[AggregationQuery]',
        'use_field_name': 'bool',
        'show_parent': 'bool',
        'show_children': 'bool',
        'children_filter_field_list': 'list[object]',
        'aggregation_split_multi_value': 'bool'
    }

    attribute_map = {
        'order_by_list': 'orderByList',
        'page_size': 'pageSize',
        'page_index': 'pageIndex',
        'table_id': 'tableId',
        'condition_list': 'conditionList',
        'id': 'id',
        'group_by_field_list': 'groupByFieldList',
        'aggregation_query_list': 'aggregationQueryList',
        'use_field_name': 'useFieldName',
        'show_parent': 'showParent',
        'show_children': 'showChildren',
        'children_filter_field_list': 'childrenFilterFieldList',
        'aggregation_split_multi_value': 'aggregationSplitMultiValue'
    }

    def __init__(self, order_by_list=None, page_size=None, page_index=None, table_id=None, condition_list=None, id=None, group_by_field_list=None, aggregation_query_list=None, use_field_name=None, show_parent=None, show_children=None, children_filter_field_list=None, aggregation_split_multi_value=None):  # noqa: E501
        """TableRecordListRequest - a model defined in Swagger"""  # noqa: E501
        self._order_by_list = None
        self._page_size = None
        self._page_index = None
        self._table_id = None
        self._condition_list = None
        self._id = None
        self._group_by_field_list = None
        self._aggregation_query_list = None
        self._use_field_name = None
        self._show_parent = None
        self._show_children = None
        self._children_filter_field_list = None
        self._aggregation_split_multi_value = None
        self.discriminator = None
        if order_by_list is not None:
            self.order_by_list = order_by_list
        if page_size is not None:
            self.page_size = page_size
        if page_index is not None:
            self.page_index = page_index
        self.table_id = table_id
        if condition_list is not None:
            self.condition_list = condition_list
        if id is not None:
            self.id = id
        if group_by_field_list is not None:
            self.group_by_field_list = group_by_field_list
        if aggregation_query_list is not None:
            self.aggregation_query_list = aggregation_query_list
        if use_field_name is not None:
            self.use_field_name = use_field_name
        if show_parent is not None:
            self.show_parent = show_parent
        if show_children is not None:
            self.show_children = show_children
        if children_filter_field_list is not None:
            self.children_filter_field_list = children_filter_field_list
        if aggregation_split_multi_value is not None:
            self.aggregation_split_multi_value = aggregation_split_multi_value

    @property
    def order_by_list(self):
        """Gets the order_by_list of this TableRecordListRequest.  # noqa: E501

        排序方式  # noqa: E501

        :return: The order_by_list of this TableRecordListRequest.  # noqa: E501
        :rtype: list[OrderBy]
        """
        return self._order_by_list

    @order_by_list.setter
    def order_by_list(self, order_by_list):
        """Sets the order_by_list of this TableRecordListRequest.

        排序方式  # noqa: E501

        :param order_by_list: The order_by_list of this TableRecordListRequest.  # noqa: E501
        :type: list[OrderBy]
        """

        self._order_by_list = order_by_list

    @property
    def page_size(self):
        """Gets the page_size of this TableRecordListRequest.  # noqa: E501

        每页数量  # noqa: E501

        :return: The page_size of this TableRecordListRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this TableRecordListRequest.

        每页数量  # noqa: E501

        :param page_size: The page_size of this TableRecordListRequest.  # noqa: E501
        :type: int
        """

        self._page_size = page_size

    @property
    def page_index(self):
        """Gets the page_index of this TableRecordListRequest.  # noqa: E501

        页码  # noqa: E501

        :return: The page_index of this TableRecordListRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_index

    @page_index.setter
    def page_index(self, page_index):
        """Sets the page_index of this TableRecordListRequest.

        页码  # noqa: E501

        :param page_index: The page_index of this TableRecordListRequest.  # noqa: E501
        :type: int
        """

        self._page_index = page_index

    @property
    def table_id(self):
        """Gets the table_id of this TableRecordListRequest.  # noqa: E501

        数据表ID  # noqa: E501

        :return: The table_id of this TableRecordListRequest.  # noqa: E501
        :rtype: str
        """
        return self._table_id

    @table_id.setter
    def table_id(self, table_id):
        """Sets the table_id of this TableRecordListRequest.

        数据表ID  # noqa: E501

        :param table_id: The table_id of this TableRecordListRequest.  # noqa: E501
        :type: str
        """
        if table_id is None:
            raise ValueError("Invalid value for `table_id`, must not be `None`")  # noqa: E501

        self._table_id = table_id

    @property
    def condition_list(self):
        """Gets the condition_list of this TableRecordListRequest.  # noqa: E501

        过滤条件列表  # noqa: E501

        :return: The condition_list of this TableRecordListRequest.  # noqa: E501
        :rtype: list[Condition]
        """
        return self._condition_list

    @condition_list.setter
    def condition_list(self, condition_list):
        """Sets the condition_list of this TableRecordListRequest.

        过滤条件列表  # noqa: E501

        :param condition_list: The condition_list of this TableRecordListRequest.  # noqa: E501
        :type: list[Condition]
        """

        self._condition_list = condition_list

    @property
    def id(self):
        """Gets the id of this TableRecordListRequest.  # noqa: E501

        指定记录ID  # noqa: E501

        :return: The id of this TableRecordListRequest.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TableRecordListRequest.

        指定记录ID  # noqa: E501

        :param id: The id of this TableRecordListRequest.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def group_by_field_list(self):
        """Gets the group_by_field_list of this TableRecordListRequest.  # noqa: E501

        分组列表  # noqa: E501

        :return: The group_by_field_list of this TableRecordListRequest.  # noqa: E501
        :rtype: list[object]
        """
        return self._group_by_field_list

    @group_by_field_list.setter
    def group_by_field_list(self, group_by_field_list):
        """Sets the group_by_field_list of this TableRecordListRequest.

        分组列表  # noqa: E501

        :param group_by_field_list: The group_by_field_list of this TableRecordListRequest.  # noqa: E501
        :type: list[object]
        """

        self._group_by_field_list = group_by_field_list

    @property
    def aggregation_query_list(self):
        """Gets the aggregation_query_list of this TableRecordListRequest.  # noqa: E501

        聚合查询列表  # noqa: E501

        :return: The aggregation_query_list of this TableRecordListRequest.  # noqa: E501
        :rtype: list[AggregationQuery]
        """
        return self._aggregation_query_list

    @aggregation_query_list.setter
    def aggregation_query_list(self, aggregation_query_list):
        """Sets the aggregation_query_list of this TableRecordListRequest.

        聚合查询列表  # noqa: E501

        :param aggregation_query_list: The aggregation_query_list of this TableRecordListRequest.  # noqa: E501
        :type: list[AggregationQuery]
        """

        self._aggregation_query_list = aggregation_query_list

    @property
    def use_field_name(self):
        """Gets the use_field_name of this TableRecordListRequest.  # noqa: E501

        使用字段名称作为返回数据的键  # noqa: E501

        :return: The use_field_name of this TableRecordListRequest.  # noqa: E501
        :rtype: bool
        """
        return self._use_field_name

    @use_field_name.setter
    def use_field_name(self, use_field_name):
        """Sets the use_field_name of this TableRecordListRequest.

        使用字段名称作为返回数据的键  # noqa: E501

        :param use_field_name: The use_field_name of this TableRecordListRequest.  # noqa: E501
        :type: bool
        """

        self._use_field_name = use_field_name

    @property
    def show_parent(self):
        """Gets the show_parent of this TableRecordListRequest.  # noqa: E501

        查询父节点数据  # noqa: E501

        :return: The show_parent of this TableRecordListRequest.  # noqa: E501
        :rtype: bool
        """
        return self._show_parent

    @show_parent.setter
    def show_parent(self, show_parent):
        """Sets the show_parent of this TableRecordListRequest.

        查询父节点数据  # noqa: E501

        :param show_parent: The show_parent of this TableRecordListRequest.  # noqa: E501
        :type: bool
        """

        self._show_parent = show_parent

    @property
    def show_children(self):
        """Gets the show_children of this TableRecordListRequest.  # noqa: E501

        查询子节点数据  # noqa: E501

        :return: The show_children of this TableRecordListRequest.  # noqa: E501
        :rtype: bool
        """
        return self._show_children

    @show_children.setter
    def show_children(self, show_children):
        """Sets the show_children of this TableRecordListRequest.

        查询子节点数据  # noqa: E501

        :param show_children: The show_children of this TableRecordListRequest.  # noqa: E501
        :type: bool
        """

        self._show_children = show_children

    @property
    def children_filter_field_list(self):
        """Gets the children_filter_field_list of this TableRecordListRequest.  # noqa: E501

        查询子节点数据的字段列表  # noqa: E501

        :return: The children_filter_field_list of this TableRecordListRequest.  # noqa: E501
        :rtype: list[object]
        """
        return self._children_filter_field_list

    @children_filter_field_list.setter
    def children_filter_field_list(self, children_filter_field_list):
        """Sets the children_filter_field_list of this TableRecordListRequest.

        查询子节点数据的字段列表  # noqa: E501

        :param children_filter_field_list: The children_filter_field_list of this TableRecordListRequest.  # noqa: E501
        :type: list[object]
        """

        self._children_filter_field_list = children_filter_field_list

    @property
    def aggregation_split_multi_value(self):
        """Gets the aggregation_split_multi_value of this TableRecordListRequest.  # noqa: E501

        是否分离多选值  # noqa: E501

        :return: The aggregation_split_multi_value of this TableRecordListRequest.  # noqa: E501
        :rtype: bool
        """
        return self._aggregation_split_multi_value

    @aggregation_split_multi_value.setter
    def aggregation_split_multi_value(self, aggregation_split_multi_value):
        """Sets the aggregation_split_multi_value of this TableRecordListRequest.

        是否分离多选值  # noqa: E501

        :param aggregation_split_multi_value: The aggregation_split_multi_value of this TableRecordListRequest.  # noqa: E501
        :type: bool
        """

        self._aggregation_split_multi_value = aggregation_split_multi_value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TableRecordListRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TableRecordListRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
